{"version":3,"sources":["webpack:///src/app/pages/cleanerregister/cleanerregister-routing.module.ts","webpack:///src/app/pages/cleanerregister/cleanerregister.module.ts","webpack:///src/app/pages/cleanerregister/cleanerregister.page.ts","webpack:///src/app/pages/cleanerregister/cleanerregister.page.scss","webpack:///src/app/pages/cleanerregister/cleanerregister.page.html"],"names":["routes","path","component","CleanerregisterPage","CleanerregisterPageRoutingModule","NgModule","imports","RouterModule","exports","CleanerregisterPageModule","CommonModule","FormsModule","IonicModule","declarations","platform","menu","localService","restService","utilityService","eventsService","router","actionSheetCtrl","toastCtrl","transfer","sanitizer","cleaner","name","email","phone","password","address","postcode","verification","verificationCode","code","token","lastImage","imageToUpload","ext","cnfpassword","ready","then","config","onesignalAppId","stateChanges","console","log","JSON","parse","stringify","userId","navigate","openAlerts","length","device","getPlatform","loadingOpen","postData","subscribe","data","loadingClose","uploadImage","id","navigateByUrl","err","status","error","is","Camera","quality","allowEditing","resultType","CameraResultType","image","bypassSecurityTrustResourceUrl","webPath","format","cleanerId","options","fileKey","fileName","chunkedMode","mimeType","params","fileTransfer","create","upload","baseURL","Platform","MenuController","LocalService","RestService","UtilityService","EventsService","Router","ActionSheetController","ToastController","FileTransfer","DomSanitizer","Component","selector","template"],"mappings":"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","file":"src_app_pages_cleanerregister_cleanerregister_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CleanerregisterPage } from './cleanerregister.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CleanerregisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CleanerregisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CleanerregisterPageRoutingModule } from './cleanerregister-routing.module';\n\nimport { CleanerregisterPage } from './cleanerregister.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CleanerregisterPageRoutingModule\n  ],\n  declarations: [CleanerregisterPage]\n})\nexport class CleanerregisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  Platform,\n  MenuController,\n  ActionSheetController,\n  ToastController,\n} from '@ionic/angular';\n\nimport { Router } from '@angular/router';\nimport { LocalService } from '../../services/local.service';\nimport { RestService } from '../../services/rest.service';\nimport { UtilityService } from '../../services/utility.service';\nimport { EventsService } from '../../services/events.service';\n\nimport OneSignal from 'onesignal-cordova-plugin';\n\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport {\n  FileTransfer,\n  FileUploadOptions,\n  FileTransferObject,\n} from '@ionic-native/file-transfer/ngx';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-cleanerregister',\n  templateUrl: './cleanerregister.page.html',\n  styleUrls: ['./cleanerregister.page.scss'],\n})\nexport class CleanerregisterPage implements OnInit {\n  cleaner: any = {\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    address: '',\n    postcode: '',\n  };\n  verification = false;\n  verificationCode = null;\n  code: any = null;\n  token: any = null;\n\n  lastImage: any = null;\n  imageToUpload: any = null;\n  ext: any = null;\n\n  cnfpassword: any = '';\n\n  constructor(\n    private platform: Platform,\n    private menu: MenuController,\n\n    public localService: LocalService,\n    public restService: RestService,\n    public utilityService: UtilityService,\n    public eventsService: EventsService,\n    private router: Router,\n    public actionSheetCtrl: ActionSheetController,\n    public toastCtrl: ToastController,\n    private transfer: FileTransfer,\n    private sanitizer: DomSanitizer\n  ) {\n    this.platform.ready().then(() => {\n      OneSignal.setAppId(this.utilityService.config.onesignalAppId);\n\n      OneSignal.getDeviceState((stateChanges) =>{\n        console.log('login: ' + JSON.parse(JSON.stringify(stateChanges)).userId);\n        this.token = JSON.parse(JSON.stringify(stateChanges)).userId;\n        console.log(\"this.token\",this.token);\n      });\n    })\n  }\n\n  ngOnInit() {}\n\n  user() {\n    this.router.navigate(['/signup']);\n  }\n\n  login() {\n    this.router.navigate(['/cleanerlogin']);\n  }\n\n  register() {\n    if (this.cleaner.name === '') {\n      return this.utilityService.openAlerts('Error', 'Name required.', 'ok');\n    }\n    if (this.cleaner.email === '') {\n      return this.utilityService.openAlerts('Error', 'Email required.', 'ok');\n    }\n    if (this.cleaner.phone === '') {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Phone number required.',\n        'ok'\n      );\n    }\n    if (this.cleaner.password.length < 5) {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Password should be minimum 5 character.',\n        'ok'\n      );\n    }\n    if (this.cleaner.password !== this.cnfpassword) {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Password & confirm password must be same.',\n        'ok'\n      );\n    }\n    if (this.cleaner.address === '') {\n      return this.utilityService.openAlerts('Error', 'Address required.', 'ok');\n    }\n    if (this.cleaner.postcode === '') {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Postcode required.',\n        'ok'\n      );\n    }\n\n    // image also required\n    if (!this.lastImage) {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Profile image required.',\n        'ok'\n      );\n    }\n\n    this.cleaner.device = this.getPlatform();\n    this.cleaner.token = this.token;\n    this.utilityService.loadingOpen('Registering...');\n    this.restService.postData('cleaner/register', this.cleaner).subscribe(\n      (data) => {\n        this.utilityService.loadingClose();\n        // now upload image of cleaner silently\n        if (this.lastImage != null) {\n          this.uploadImage(data.id);\n        }\n        // verify view\n        //this.Verification = true;\n        this.verificationCode = data.code;\n        //\n        this.cleaner = data;\n\n        // no verification required =========\n        this.utilityService.openAlerts('Registration Successful', 'You may login now.', 'ok');\n        this.router.navigateByUrl('/cleanerlogin');\n      },\n      (err) => {\n        this.utilityService.loadingClose();\n        if (err.status === 403 && err.error.error.email) {\n          return this.utilityService.openAlerts(\n            'Error',\n            'The email has already been taken.',\n            'ok'\n          );\n        } else if (err.status === 404) {\n          return this.utilityService.openAlerts(\n            'Error',\n            'Please enter a valid address & postcode.',\n            'ok'\n          );\n        } else {\n          return this.utilityService.openAlerts(\n            'Error',\n            'Cleaner registration failed, please try again later.',\n            'ok'\n          );\n        }\n      }\n    );\n  }\n\n  verify() {\n    if (this.cleaner.code === this.verificationCode) {\n      // active the cleaner\n      this.utilityService.loadingOpen('Verifying...');\n      this.restService\n        .postData('cleaner/verify', {\n          email: this.cleaner.email,\n          code: this.verificationCode,\n        })\n        .subscribe(\n          (data) => {\n            this.utilityService.loadingClose();\n            this.utilityService.openAlerts('Done', 'You can now login.', 'ok');\n            this.router.navigateByUrl('/cleanerlogin');\n          },\n          (err) => {\n            this.utilityService.loadingClose();\n            return this.utilityService.openAlerts(\n              'Error',\n              'Something not right at verification.',\n              'ok'\n            );\n          }\n        );\n    } else {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Inavalid code entered.',\n        'ok'\n      );\n    }\n  }\n\n  getPlatform() {\n    if (this.platform.is('ios') || this.platform.is('ipad')) {\n      return 'ios';\n    } else if (this.platform.is('android')) {\n      return 'android';\n    } else {\n      return 'other';\n    }\n  }\n\n  terms() {\n    this.router.navigate(['/terms']);\n  }\n\n  // image uploading section =========================\n  async takePicture() {\n    // Get the data of an image\n    const image = await Camera.getPhoto({\n      quality: 60,\n      allowEditing: false,\n      resultType: CameraResultType.Uri,\n    });\n\n    this.imageToUpload = image.path;\n    this.lastImage = this.sanitizer.bypassSecurityTrustResourceUrl(\n      image && image.webPath\n    );\n    this.ext = image.format;\n  }\n\n  async uploadImage(cleanerId) {\n    const options = {\n      fileKey: 'image',\n      fileName: `file-${cleanerId}.${this.ext}`,\n      chunkedMode: false,\n      mimeType: 'multipart/form-data',\n      params: {\n        fileName: `file-${cleanerId}.${this.ext}`,\n        image: `file-${cleanerId}.${this.ext}`,\n      },\n    };\n\n    const fileTransfer: FileTransferObject = this.transfer.create();\n    fileTransfer\n      .upload(\n        this.imageToUpload,\n        this.restService.baseURL + 'cleaner/update_cleaner_image/' + cleanerId,\n        options\n      )\n      .then(\n        (data) => {\n          console.log(data);\n          // clear the last data\n          this.lastImage = null;\n          this.imageToUpload = null;\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n  }\n}\n","export default \".uploader {\\n  text-align: center;\\n  margin: auto;\\n}\\n.uploader img {\\n  text-align: center;\\n  margin: auto;\\n}\\n.uploader .avatar {\\n  height: 80px;\\n  width: 80px;\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuZXJyZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUU7RUFDRSxrQkFBQTtFQUNBLFlBQUE7QUFDSjtBQUFJO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0FBRVI7QUFDSTtFQUNFLFlBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUFDTiIsImZpbGUiOiJjbGVhbmVycmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICAudXBsb2FkZXJ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBpbWd7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgIH1cblxuICAgIC5hdmF0YXJ7XG4gICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICB3aWR0aDogODBweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB9XG4gIH1cbiJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <img class=\\\"logo\\\" src=\\\"{{utilityService.config.adminBaseUrl}}/uploads/images/{{localService.getSettings().image}}\\\" height=\\\"40\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div class=\\\"signup-container\\\" *ngIf=\\\"!verification\\\">\\n      <h4 class=\\\"heading-title ion-text-center ion-text-uppercase\\\">Register as Cleaner</h4>\\n      <div class=\\\"uploader\\\">\\n        <img *ngIf=\\\"lastImage === null\\\" (click)=\\\"takePicture()\\\" src=\\\"/assets/images/profile-image-black.png\\\"/>\\n        <img class=\\\"avatar\\\" *ngIf=\\\"lastImage !== null\\\" [src]=\\\"lastImage\\\"/>\\n      </div>\\n\\n      <ion-input clearInput type=\\\"text\\\" placeholder=\\\"NAME\\\" [(ngModel)]=\\\"cleaner.name\\\"></ion-input>\\n      <ion-input clearInput type=\\\"email\\\" placeholder=\\\"EMAIL ADDRESS\\\" [(ngModel)]=\\\"cleaner.email\\\" (ngModelChange)=\\\"cleaner.email = $event.toLocaleLowerCase()\\\"></ion-input>\\n      <ion-input clearInput type=\\\"tel\\\" placeholder=\\\"PHONE NUMBER\\\" [(ngModel)]=\\\"cleaner.phone\\\"></ion-input>\\n      <ion-input clearInput type=\\\"text\\\" placeholder=\\\"ADDRESS\\\" [(ngModel)]=\\\"cleaner.address\\\"></ion-input>\\n      <ion-input clearInput type=\\\"text\\\" placeholder=\\\"POSTCODE\\\" [(ngModel)]=\\\"cleaner.postcode\\\" (ngModelChange)=\\\"cleaner.postcode = $event.toLocaleUpperCase()\\\"></ion-input>\\n      <ion-input clearInput type=\\\"password\\\" placeholder=\\\"PASSWORD\\\" [(ngModel)]=\\\"cleaner.password\\\"></ion-input>\\n      <ion-input clearInput type=\\\"password\\\" placeholder=\\\"CONFIRM PASSWORD\\\" [(ngModel)]=\\\"cnfpassword\\\"></ion-input>\\n      <ion-button expand=\\\"block\\\" class=\\\"base-button\\\" (click)=\\\"register()\\\">REGISTER</ion-button>\\n\\n      <div class=\\\"action-links\\\">\\n          <p class=\\\"terms\\\" (click)=\\\"terms()\\\">BY REGISTERING YOU ARE AGREEING TO OUR <span class=\\\"tnc\\\">TERMS AND CONDITIONS</span></p>\\n          <p class=\\\"signin\\\" (click)=\\\"login()\\\">ALREADY REGISTERED? <span>SIGN IN</span></p>\\n      </div>\\n\\n      <ion-button expand=\\\"block\\\" class=\\\"base-button cleaner-btn\\\" (click)=\\\"user()\\\">I'M A USER</ion-button>\\n\\n  </div>\\n  <div class=\\\"signup-container\\\" *ngIf=\\\"verification\\\">\\n    <h5 text-justify>Please enter the verification code sent to your email.</h5>\\n    <p text-justify>This may take a few minutes to arrive, please remember to check your junk mail if you do not receive anything.</p>\\n    <ion-input class=\\\"input\\\" type=\\\"tel\\\" maxlength=\\\"6\\\" placeholder=\\\"ENTER CODE\\\" [(ngModel)]=\\\"code\\\"></ion-input>\\n    <ion-button expand=\\\"block\\\" class=\\\"base-button\\\" (click)=\\\"verify()\\\">VERIFY</ion-button>\\n  </div>\\n</ion-content>\\n\";"]}