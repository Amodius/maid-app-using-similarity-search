{"version":3,"sources":["webpack:///src/app/pages/signup/signup-routing.module.ts","webpack:///src/app/pages/signup/signup.module.ts","webpack:///src/app/pages/signup/signup.page.ts","webpack:///src/app/pages/signup/signup.page.scss","webpack:///src/app/pages/signup/signup.page.html"],"names":["routes","path","component","SignupPage","SignupPageRoutingModule","NgModule","imports","RouterModule","exports","SignupPageModule","CommonModule","FormsModule","IonicModule","declarations","platform","menu","localService","restService","utilityService","eventsService","router","user","name","email","phone","password","verification","verificationCode","code","token","cnfpassword","ready","then","config","onesignalAppId","stateChanges","console","log","JSON","parse","stringify","userId","navigate","openAlerts","length","device","getPlatform","loadingOpen","postData","subscribe","data","loadingClose","navigateByUrl","err","status","error","is","Platform","MenuController","LocalService","RestService","UtilityService","EventsService","Router","Component","selector","template"],"mappings":"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","file":"src_app_pages_signup_signup_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Platform, MenuController } from '@ionic/angular';\n\nimport { Router } from '@angular/router';\nimport { LocalService } from '../../services/local.service';\nimport { RestService } from '../../services/rest.service';\nimport { UtilityService } from '../../services/utility.service';\nimport { EventsService } from '../../services/events.service';\n\nimport OneSignal from 'onesignal-cordova-plugin';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n  user: any = {\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n  };\n  verification = false;\n  verificationCode = null;\n  code: any = null;\n  token: any = null;\n\n  cnfpassword: any = '';\n\n  constructor(\n    private platform: Platform,\n    private menu: MenuController,\n\n    public localService: LocalService,\n    public restService: RestService,\n    public utilityService: UtilityService,\n    public eventsService: EventsService,\n    private router: Router\n  ) {\n    this.platform.ready().then(() => {\n      OneSignal.setAppId(this.utilityService.config.onesignalAppId);\n\n      OneSignal.getDeviceState((stateChanges) =>{\n        console.log('login: ' + JSON.parse(JSON.stringify(stateChanges)).userId);\n        this.token = JSON.parse(JSON.stringify(stateChanges)).userId;\n        console.log(\"this.token\",this.token);\n      });\n    })\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.router.navigate(['/login']);\n  }\n\n  cleaner() {\n    this.router.navigate(['/cleanerregister']);\n  }\n\n  signUp() {\n    if (this.user.name === '') {\n      return this.utilityService.openAlerts('Error', 'Name required.', 'ok');\n    }\n    if (this.user.email === '') {\n      return this.utilityService.openAlerts('Error', 'Email required.', 'ok');\n    }\n    if (this.user.phone === '') {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Phone number required.',\n        'ok'\n      );\n    }\n    if (this.user.password.length < 5) {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Password should be minimum 5 character.',\n        'ok'\n      );\n    }\n    if (this.user.password !== this.cnfpassword) {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Password & confirm password must be same.',\n        'ok'\n      );\n    }\n    this.user.device = this.getPlatform();\n    this.user.token = this.token;\n    this.utilityService.loadingOpen('Registering...');\n    this.restService.postData('user/register', this.user).subscribe(\n      (data) => {\n        // verify view\n        // this.Verification = true;\n        this.verificationCode = data.code;\n        //\n        this.user = data;\n        this.utilityService.loadingClose();\n\n        // no verification required =========\n        this.utilityService.openAlerts('Registration Successful', 'You may login now.', 'ok');\n        this.router.navigateByUrl('/login');\n      },\n      (err) => {\n        this.utilityService.loadingClose();\n        if (err.status === 403 && err.error.error.email) {\n          return this.utilityService.openAlerts(\n            'Error',\n            'The email has already been taken.',\n            'ok'\n          );\n        } else {\n          return this.utilityService.openAlerts(\n            'Error',\n            'User registration failed, please try again later.',\n            'ok'\n          );\n        }\n      }\n    );\n  }\n\n  verify() {\n    if (this.user.code === this.verificationCode) {\n      // active the user\n      this.utilityService.loadingOpen('Verifying...');\n      this.restService\n        .postData('user/verify', {\n          email: this.user.email,\n          code: this.verificationCode,\n        })\n        .subscribe(\n          (data) => {\n            this.utilityService.loadingClose();\n            this.utilityService.openAlerts('Done', 'You can now login.', 'ok');\n            this.router.navigateByUrl('/login');\n          },\n          (err) => {\n            this.utilityService.loadingClose();\n            return this.utilityService.openAlerts(\n              'Error',\n              'Something not right at verification.',\n              'ok'\n            );\n          }\n        );\n    } else {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Inavalid code entered.',\n        'ok'\n      );\n    }\n  }\n\n  getPlatform() {\n    if (this.platform.is('ios') || this.platform.is('ipad')) {\n      return 'ios';\n    } else if (this.platform.is('android')) {\n      return 'android';\n    } else {\n      return 'other';\n    }\n  }\n\n  terms() {\n    this.router.navigate(['/terms']);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaWdudXAucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <img class=\\\"logo\\\" src=\\\"{{utilityService.config.adminBaseUrl}}/uploads/images/{{localService.getSettings().image}}\\\" height=\\\"40\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n   <div class=\\\"signup-container\\\" *ngIf=\\\"!verification\\\">\\n      <h4 class=\\\"heading-title ion-text-center ion-text-uppercase\\\">Register as User</h4>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"NAME\\\" [(ngModel)]=\\\"user.name\\\"></ion-input>\\n      <ion-input clearInput type=\\\"email\\\" placeholder=\\\"EMAIL ADDRESS\\\" [(ngModel)]=\\\"user.email\\\" (ngModelChange)=\\\"user.email = $event.toLocaleLowerCase()\\\"></ion-input>\\n      <ion-input clearInput type=\\\"tel\\\" placeholder=\\\"PHONE NUMBER\\\" [(ngModel)]=\\\"user.phone\\\"></ion-input>\\n      <ion-input clearInput type=\\\"password\\\" placeholder=\\\"PASSWORD\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n      <ion-input clearInput type=\\\"password\\\" placeholder=\\\"CONFIRM PASSWORD\\\" [(ngModel)]=\\\"cnfpassword\\\"></ion-input>\\n      <ion-button expand=\\\"block\\\" class=\\\"base-button\\\" (click)=\\\"signUp()\\\">REGISTER</ion-button>\\n\\n      <div class=\\\"action-links\\\">\\n          <p class=\\\"terms\\\" (click)=\\\"terms()\\\">BY REGISTERING YOU ARE AGREEING TO OUR <span class=\\\"tnc\\\">TERMS AND CONDITIONS</span></p>\\n          <p class=\\\"signin\\\" (click)=\\\"login()\\\">ALREADY REGISTERED? <span>SIGN IN</span></p>\\n      </div>\\n\\n      <ion-button expand=\\\"block\\\" class=\\\"base-button cleaner-btn\\\" (click)=\\\"cleaner()\\\">I'M A CLEANER</ion-button>\\n\\n  </div>\\n  <div class=\\\"signup-container\\\" *ngIf=\\\"verification\\\">\\n    <h5 text-justify>Please enter the verification code sent to your email.</h5>\\n    <p text-justify>This may take a few minutes to arrive, please remember to check your junk mail if you do not receive anything.</p>\\n    <ion-input class=\\\"input\\\" type=\\\"tel\\\" maxlength=\\\"6\\\" placeholder=\\\"ENTER CODE\\\" [(ngModel)]=\\\"code\\\"></ion-input>\\n    <button ion-button full class=\\\"base-button\\\" (click)=\\\"verify()\\\">VERIFY</button>\\n  </div>\\n</ion-content>\\n\";"]}