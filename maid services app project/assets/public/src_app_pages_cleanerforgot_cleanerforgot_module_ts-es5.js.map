{"version":3,"sources":["webpack:///src/app/pages/cleanerforgot/cleanerforgot-routing.module.ts","webpack:///src/app/pages/cleanerforgot/cleanerforgot.module.ts","webpack:///src/app/pages/cleanerforgot/cleanerforgot.page.ts","webpack:///src/app/pages/cleanerforgot/cleanerforgot.page.scss","webpack:///src/app/pages/cleanerforgot/cleanerforgot.page.html"],"names":["routes","path","component","CleanerforgotPage","CleanerforgotPageRoutingModule","NgModule","imports","RouterModule","exports","CleanerforgotPageModule","CommonModule","FormsModule","IonicModule","declarations","localService","restService","utilityService","eventsService","router","email","cleaner","resetScreen","length","openAlerts","postData","subscribe","data","console","log","err","code","password","id","navigateByUrl","LocalService","RestService","UtilityService","EventsService","Router","Component","selector","template"],"mappings":"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","file":"src_app_pages_cleanerforgot_cleanerforgot_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CleanerforgotPage } from './cleanerforgot.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CleanerforgotPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CleanerforgotPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CleanerforgotPageRoutingModule } from './cleanerforgot-routing.module';\n\nimport { CleanerforgotPage } from './cleanerforgot.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CleanerforgotPageRoutingModule\n  ],\n  declarations: [CleanerforgotPage]\n})\nexport class CleanerforgotPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalService } from '../../services/local.service';\nimport { RestService } from '../../services/rest.service';\nimport { UtilityService } from '../../services/utility.service';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n  selector: 'app-cleanerforgot',\n  templateUrl: './cleanerforgot.page.html',\n  styleUrls: ['./cleanerforgot.page.scss'],\n})\nexport class CleanerforgotPage implements OnInit {\n  email: any = '';\n  password: any;\n  code: any;\n  cleaner: any = {};\n  resetScreen = false;\n\n  constructor(\n    public localService: LocalService,\n    public restService: RestService,\n    public utilityService: UtilityService,\n    public eventsService: EventsService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  reset() {\n    if (this.email.length < 5) {\n      return this.utilityService.openAlerts(\n        'Sorry!',\n        'Please enter a valid email address.',\n        'ok'\n      );\n    }\n    this.restService.postData('cleaner/forgot', { email: this.email }).subscribe(\n      (data) => {\n        console.log(data);\n        this.cleaner = data;\n        this.resetScreen = true;\n      },\n      (err) => this.utilityService.openAlerts('Error', 'User not found.', 'ok')\n    );\n  }\n\n  update() {\n    if (this.code === this.cleaner.code) {\n      if (this.password.length < 5) {\n        return this.utilityService.openAlerts(\n          'Error!',\n          'Minimum 5 character required.',\n          'ok'\n        );\n      }\n      this.restService\n        .postData('cleaner/reset', {\n          id: this.cleaner.id,\n          password: this.password,\n          code: this.code,\n        })\n        .subscribe(\n          (data) => {\n            console.log(data);\n            this.router.navigateByUrl('/cleanerlogin');\n          },\n          (err) =>\n            this.utilityService.openAlerts(\n              'Error',\n              'Something not right at verification.',\n              'ok'\n            )\n        );\n    } else {\n      return this.utilityService.openAlerts(\n        'Error',\n        'Invalid code provided.',\n        'ok'\n      );\n    }\n  }\n}\n","export default \".heading, .sub-heading {\\n  color: #9b9b9b;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuZXJmb3Jnb3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQUNGIiwiZmlsZSI6ImNsZWFuZXJmb3Jnb3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRpbmcsIC5zdWItaGVhZGluZ3tcbiAgY29sb3I6ICM5YjliOWI7XG59XG4iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <img class=\\\"logo\\\" src=\\\"{{utilityService.config.adminBaseUrl}}/uploads/images/{{localService.getSettings().image}}\\\" height=\\\"40\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"forgot-container\\\" *ngIf=\\\"!resetScreen\\\">\\n      <h4 class=\\\"heading ion-text-center ion-text-uppercase\\\">Forgot Password?</h4>\\n      <p class=\\\"sub-heading ion-text-center ion-text-uppercase\\\">Enter your email to reset your password</p>\\n      <ion-input clearInput type=\\\"email\\\" placeholder=\\\"EMAIL ADDRESS\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n      <ion-button expand=\\\"block\\\" class=\\\"base-button\\\" (click)=\\\"reset()\\\">RESET PASSWORD</ion-button>\\n\\n  </div>\\n  <div class=\\\"forgot-container\\\" *ngIf=\\\"resetScreen\\\">\\n      <p class=\\\"sub-heading ion-text-center ion-text-uppercase\\\">A code has been sent to your email. Check it and enter the code to reset the password</p>\\n      <ion-input clearInput type=\\\"tel\\\" maxlength=\\\"6\\\" placeholder=\\\"ENTER CODE\\\" [(ngModel)]=\\\"code\\\"></ion-input>\\n      <ion-input clearInput type=\\\"password\\\" placeholder=\\\"NEW PASSWORD\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n      <ion-button expand=\\\"block\\\" class=\\\"base-button\\\" (click)=\\\"update()\\\">UPDATE NEW PASSWORD</ion-button>\\n\\n  </div>\\n\\n\";"]}