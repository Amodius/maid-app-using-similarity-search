{"version":3,"sources":["webpack:///src/app/pages/cleanerlogin/cleanerlogin-routing.module.ts","webpack:///src/app/pages/cleanerlogin/cleanerlogin.module.ts","webpack:///src/app/pages/cleanerlogin/cleanerlogin.page.ts","webpack:///src/app/pages/cleanerlogin/cleanerlogin.page.scss","webpack:///src/app/pages/cleanerlogin/cleanerlogin.page.html"],"names":["routes","path","component","CleanerloginPage","CleanerloginPageRoutingModule","NgModule","imports","RouterModule","exports","CleanerloginPageModule","CommonModule","FormsModule","IonicModule","declarations","platform","menu","localService","restService","utilityService","eventsService","router","cleaner","email","password","token","ready","then","config","onesignalAppId","stateChanges","console","log","JSON","parse","stringify","userId","openAlerts","device","getPlatform","loadingOpen","postData","subscribe","data","setCleaner","enable","publish","loadingClose","checkedIfCleanerVerified","getCleaner","id","err","navigate","is","getData","callback","navigateByUrl","replaceUrl","failed","status","error","reason","Platform","MenuController","LocalService","RestService","UtilityService","EventsService","Router","Component","selector","template"],"mappings":"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","file":"src_app_pages_cleanerlogin_cleanerlogin_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CleanerloginPage } from './cleanerlogin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CleanerloginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CleanerloginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CleanerloginPageRoutingModule } from './cleanerlogin-routing.module';\n\nimport { CleanerloginPage } from './cleanerlogin.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CleanerloginPageRoutingModule\n  ],\n  declarations: [CleanerloginPage]\n})\nexport class CleanerloginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Platform, MenuController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { LocalService } from '../../services/local.service';\nimport { RestService } from '../../services/rest.service';\nimport { UtilityService } from '../../services/utility.service';\nimport { EventsService } from '../../services/events.service';\n\nimport OneSignal from 'onesignal-cordova-plugin';\n\n@Component({\n  selector: 'app-cleanerlogin',\n  templateUrl: './cleanerlogin.page.html',\n  styleUrls: ['./cleanerlogin.page.scss'],\n})\nexport class CleanerloginPage implements OnInit {\n  cleaner: any = {\n    email: '',\n    password: '',\n  };\n  token: any = null;\n\n  constructor(\n    private platform: Platform,\n    private menu: MenuController,\n\n    public localService: LocalService,\n    public restService: RestService,\n    public utilityService: UtilityService,\n    public eventsService: EventsService,\n    private router: Router\n  ) {\n    this.platform.ready().then(() => {\n      OneSignal.setAppId(this.utilityService.config.onesignalAppId);\n\n      OneSignal.getDeviceState((stateChanges) =>{\n        console.log('login: ' + JSON.parse(JSON.stringify(stateChanges)).userId);\n        this.token = JSON.parse(JSON.stringify(stateChanges)).userId;\n        console.log(\"this.token\",this.token);\n      });\n    })\n  }\n\n  ngOnInit() {}\n\n  login() {\n    if (this.cleaner.email === '') {\n      return this.utilityService.openAlerts('Error', 'Email required', 'ok');\n    }\n    if (this.cleaner.password === '') {\n      return this.utilityService.openAlerts('Error', 'Password required', 'ok');\n    }\n    this.cleaner.device = this.getPlatform();\n    this.cleaner.token = this.token;\n    this.utilityService.loadingOpen('Authenticating...');\n    this.restService.postData('cleaner/login', this.cleaner).subscribe(\n      (data) => {\n        this.localService.setCleaner(data);\n        // refresh the menu : send event\n        this.menu.enable(true);\n        this.eventsService.publish('menu', 'cleaner');\n        this.utilityService.loadingClose();\n        this.checkedIfCleanerVerified(this.localService.getCleaner().id);\n      },\n      (err) => {\n        this.utilityService.loadingClose();\n        return this.utilityService.openAlerts('Error', 'Login failed.', 'ok');\n      }\n    );\n  }\n  register() {\n    this.router.navigate(['/cleanerregister']);\n  }\n  forgot() {\n    this.router.navigate(['/cleanerforgot']);\n  }\n  user() {\n    this.router.navigate(['/login']);\n  }\n\n  getPlatform() {\n    if (this.platform.is('ios') || this.platform.is('ipad')) {\n      return 'ios';\n    } else if (this.platform.is('android')) {\n      return 'android';\n    } else {\n      return 'other';\n    }\n  }\n\n  terms() {\n    this.router.navigate(['/terms']);\n  }\n  privacy() {\n    this.router.navigate(['/privacy']);\n  }\n\n  checkedIfCleanerVerified(id) {\n    // check verification status\n    this.restService\n      .getData('cleaner/' + id + '/checkverification')\n      .subscribe(\n        (callback) => {\n          this.router.navigateByUrl('/cleanerhome', {replaceUrl: true});\n        },\n        (failed) => {\n          if (failed.status === 404) {\n            // need to submit details\n            this.router.navigateByUrl('/cleanermoredetails?mode=new', {\n              replaceUrl: true,\n            });\n          } else if (failed.status === 401) {\n            // pending - wait for review\n            this.router.navigateByUrl('/cleanermoredetails?mode=pending', {\n              replaceUrl: true,\n            });\n          } else if (failed.status === 403) {\n            // rejected - resubmit details\n            this.router.navigateByUrl(\n              '/cleanermoredetails?mode=rejected&reason=' + failed.error.reason,\n              { replaceUrl: true }\n            );\n          } else {\n            return this.utilityService.openAlerts(\n              'Oops!',\n              'Sorry server error, Please restart the app.',\n              'ok'\n            );\n          }\n        }\n      );\n  }\n}\n","export default \".trms {\\n  color: var(--ion-color-gray);\\n  text-align: center;\\n  text-transform: uppercase;\\n  font-size: 0.8rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuZXJsb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw0QkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxpQkFBQTtBQUNGIiwiZmlsZSI6ImNsZWFuZXJsb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHJtc3tcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1ncmF5KTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDAuOHJlbTtcbn1cbiJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <img class=\\\"logo\\\" src=\\\"{{utilityService.config.adminBaseUrl}}/uploads/images/{{localService.getSettings().image}}\\\" height=\\\"40\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"login-container\\\">\\n      <div class=\\\"login-image-container\\\" *ngIf=\\\"localService.getSettings().login_image\\\" >\\n        <img class=\\\"login-image\\\" src=\\\"{{utilityService.config.adminBaseUrl}}/uploads/images/{{localService.getSettings().cleaner_login_image}}\\\"/>\\n      </div>\\n\\n      <h4 class=\\\"heading-title ion-text-center ion-text-uppercase\\\">Cleaner Login</h4>\\n      <ion-input clearInput type=\\\"text\\\" placeholder=\\\"EMAIL ADDRESS\\\" [(ngModel)]=\\\"cleaner.email\\\" (ngModelChange)=\\\"cleaner.email = $event.toLocaleLowerCase()\\\"></ion-input>\\n      <ion-input clearInput type=\\\"password\\\" placeholder=\\\"PASSWORD\\\" [(ngModel)]=\\\"cleaner.password\\\"></ion-input>\\n      <ion-button expand=\\\"block\\\" class=\\\"base-button\\\" (click)=\\\"login()\\\">LOGIN</ion-button>\\n\\n      <div class=\\\"action-links\\\">\\n        <ul>\\n          <li (click)=\\\"forgot()\\\">Forgot Password?</li>\\n          <li (click)=\\\"register()\\\">Register here</li>\\n        </ul>\\n      </div>\\n\\n      <ion-button expand=\\\"block\\\" class=\\\"base-button cleaner-btn\\\" (click)=\\\"user()\\\">I'M A USER</ion-button>\\n\\n      <p class=\\\"ion-text-center trms\\\">By using this app you are agreeing to our <span class=\\\"tnc\\\" (click)=\\\"terms()\\\">Terms & Conditions</span>, <span class=\\\"tnc\\\" (click)=\\\"privacy()\\\">GDPR</span> and <span class=\\\"tnc\\\" (click)=\\\"privacy()\\\">Privacy Policy</span></p>\\n\\n  </div>\\n</ion-content>\\n\";"]}